{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Projetos (N\\xE3o Apagar)\\\\Pessoal\\\\Rocketseat\\\\moveit-next\\\\src\\\\components\\\\Countdown.tsx\";\nimport { useEffect } from 'react';\nimport styles from '../styles/components/Countdown.module.css';\nlet countdownTimeout;\nexport function Countdown() {\n  const [minuteLeft, minuteRight] = String(minutes).padStart(2, '0').split('');\n  const [secondLeft, secondRight] = String(seconds).padStart(2, '0').split('');\n  useEffect(() => {\n    if (isActive && time > 0) {\n      countdownTimeout = setTimeout(() => {\n        setTime(time - 1);\n      }, 1000);\n    } else if (isActive && time === 0) {\n      setHasFinished(true);\n      setIsActive(false);\n      startNewChallenge();\n    }\n  }, [isActive, time]);\n\n  function startCountdown() {\n    setIsActive(true);\n  }\n\n  function resetCountdown() {\n    clearTimeout(countdownTimeout);\n    setIsActive(false);\n    setTime(25 * 0.1);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.countdownContainer,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: minuteLeft\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: minuteRight\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \":\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: secondLeft\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: secondRight\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), hasFinished ? /*#__PURE__*/_jsxDEV(\"button\", {\n      disabled: true,\n      className: styles.countdownButton,\n      children: \"Ciclo encerrado\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: isActive ? /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: `${styles.countdownButton} ${styles.countdownButtonActive}`,\n        onClick: resetCountdown,\n        children: \"Abandonar ciclo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: styles.countdownButton,\n        onClick: startCountdown,\n        children: \"Iniciar um ciclo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 13\n      }, this)\n    }, void 0, false)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n}","map":{"version":3,"sources":["C:/Projetos (NÃ£o Apagar)/Pessoal/Rocketseat/moveit-next/src/components/Countdown.tsx"],"names":["useEffect","styles","countdownTimeout","Countdown","minuteLeft","minuteRight","String","minutes","padStart","split","secondLeft","secondRight","seconds","isActive","time","setTimeout","setTime","setHasFinished","setIsActive","startNewChallenge","startCountdown","resetCountdown","clearTimeout","countdownContainer","hasFinished","countdownButton","countdownButtonActive"],"mappings":";;;AAAA,SAAmBA,SAAnB,QAAgD,OAAhD;AAEA,OAAOC,MAAP,MAAmB,2CAAnB;AAEA,IAAIC,gBAAJ;AAEA,OAAO,SAASC,SAAT,GAAqB;AAG1B,QAAM,CAACC,UAAD,EAAaC,WAAb,IAA4BC,MAAM,CAACC,OAAD,CAAN,CAAgBC,QAAhB,CAAyB,CAAzB,EAA4B,GAA5B,EAAiCC,KAAjC,CAAuC,EAAvC,CAAlC;AACA,QAAM,CAACC,UAAD,EAAaC,WAAb,IAA4BL,MAAM,CAACM,OAAD,CAAN,CAAgBJ,QAAhB,CAAyB,CAAzB,EAA4B,GAA5B,EAAiCC,KAAjC,CAAuC,EAAvC,CAAlC;AAEAT,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIa,QAAQ,IAAIC,IAAI,GAAG,CAAvB,EAA0B;AAExBZ,MAAAA,gBAAgB,GAAGa,UAAU,CAAC,MAAM;AAClCC,QAAAA,OAAO,CAACF,IAAI,GAAG,CAAR,CAAP;AACD,OAF4B,EAE1B,IAF0B,CAA7B;AAGD,KALD,MAMK,IAAID,QAAQ,IAAIC,IAAI,KAAK,CAAzB,EAA4B;AAC/BG,MAAAA,cAAc,CAAC,IAAD,CAAd;AACAC,MAAAA,WAAW,CAAC,KAAD,CAAX;AACAC,MAAAA,iBAAiB;AAClB;AACF,GAZQ,EAYN,CAACN,QAAD,EAAWC,IAAX,CAZM,CAAT;;AAcA,WAASM,cAAT,GAAyB;AACvBF,IAAAA,WAAW,CAAC,IAAD,CAAX;AACD;;AAED,WAASG,cAAT,GAAyB;AACvBC,IAAAA,YAAY,CAACpB,gBAAD,CAAZ;AACAgB,IAAAA,WAAW,CAAC,KAAD,CAAX;AACAF,IAAAA,OAAO,CAAC,KAAK,GAAN,CAAP;AACD;;AAED,sBACE;AAAA,4BACE;AAAK,MAAA,SAAS,EAAEf,MAAM,CAACsB,kBAAvB;AAAA,8BACE;AAAA,gCACE;AAAA,oBAAOnB;AAAP;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAA,oBAAOC;AAAP;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cANF,eAQE;AAAA,gCACE;AAAA,oBAAOK;AAAP;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAA,oBAAOC;AAAP;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cARF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAeIa,WAAW,gBACX;AACE,MAAA,QAAQ,MADV;AAEE,MAAA,SAAS,EAAEvB,MAAM,CAACwB,eAFpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADW,gBAOX;AAAA,gBACIZ,QAAQ,gBACR;AACE,QAAA,IAAI,EAAC,QADP;AAEE,QAAA,SAAS,EAAG,GAAEZ,MAAM,CAACwB,eAAgB,IAAGxB,MAAM,CAACyB,qBAAsB,EAFvE;AAGE,QAAA,OAAO,EAAEL,cAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADQ,gBAQR;AACE,QAAA,IAAI,EAAC,QADP;AAEE,QAAA,SAAS,EAAEpB,MAAM,CAACwB,eAFpB;AAGE,QAAA,OAAO,EAAEL,cAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AATJ,qBAtBJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA8CD","sourcesContent":["import { useState, useEffect, useContext } from 'react';\r\nimport { ChallengesContext } from '../contexts/ChallengesContext';\r\nimport styles from '../styles/components/Countdown.module.css';\r\n\r\nlet countdownTimeout : NodeJS.Timeout;\r\n\r\nexport function Countdown() {\r\n\r\n\r\n  const [minuteLeft, minuteRight] = String(minutes).padStart(2, '0').split('');\r\n  const [secondLeft, secondRight] = String(seconds).padStart(2, '0').split('');\r\n  \r\n  useEffect(() => {\r\n    if (isActive && time > 0) {\r\n      \r\n      countdownTimeout = setTimeout(() => {\r\n        setTime(time - 1);\r\n      }, 1000);\r\n    }\r\n    else if (isActive && time === 0) {\r\n      setHasFinished(true);\r\n      setIsActive(false);\r\n      startNewChallenge();\r\n    }\r\n  }, [isActive, time]);\r\n\r\n  function startCountdown(){\r\n    setIsActive(true);\r\n  }\r\n\r\n  function resetCountdown(){\r\n    clearTimeout(countdownTimeout);\r\n    setIsActive(false);\r\n    setTime(25 * 0.1);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div className={styles.countdownContainer}>\r\n        <div>\r\n          <span>{minuteLeft}</span>\r\n          <span>{minuteRight}</span>\r\n        </div>\r\n\r\n        <span>:</span>\r\n\r\n        <div>\r\n          <span>{secondLeft}</span>\r\n          <span>{secondRight}</span>\r\n        </div>\r\n      </div>\r\n\r\n      { hasFinished ? (\r\n        <button \r\n          disabled\r\n          className={styles.countdownButton}\r\n        >Ciclo encerrado\r\n        </button>\r\n      ) : (\r\n        <>\r\n          { isActive ? (\r\n            <button \r\n              type=\"button\" \r\n              className={`${styles.countdownButton} ${styles.countdownButtonActive}`}\r\n              onClick={resetCountdown}\r\n            >Abandonar ciclo\r\n            </button>\r\n          ) : (\r\n            <button \r\n              type=\"button\" \r\n              className={styles.countdownButton}\r\n              onClick={startCountdown}\r\n            >Iniciar um ciclo\r\n            </button>\r\n          )}\r\n        </>\r\n      )}\r\n\r\n\r\n    </div>\r\n\r\n  );\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}