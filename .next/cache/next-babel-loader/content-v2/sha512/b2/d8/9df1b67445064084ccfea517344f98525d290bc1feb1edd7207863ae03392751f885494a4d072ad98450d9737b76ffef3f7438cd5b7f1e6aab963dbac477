{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _objectWithoutProperties from \"C:/Projetos (N\\xE3o Apagar)/Pessoal/Rocketseat/moveit-next/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\n\nvar _jsxFileName = \"C:\\\\Projetos (N\\xE3o Apagar)\\\\Pessoal\\\\Rocketseat\\\\moveit-next\\\\src\\\\contexts\\\\ChallengesContext.tsx\",\n    _s = $RefreshSig$();\n\nimport { createContext, useState, useEffect } from 'react';\nimport Cookies from 'js-cookie';\nimport challenges from '../../challenges.json';\nimport { LevelUpModal } from '../components/LevelUpModal';\nexport var ChallengesContext = /*#__PURE__*/createContext({});\nexport function ChallengesProvider(_ref) {\n  _s();\n\n  var _rest$level, _rest$currentExperien, _rest$challengesCompl;\n\n  var children = _ref.children,\n      rest = _objectWithoutProperties(_ref, [\"children\"]);\n\n  var _useState = useState((_rest$level = rest.level) !== null && _rest$level !== void 0 ? _rest$level : 1),\n      level = _useState[0],\n      setLevel = _useState[1];\n\n  var _useState2 = useState((_rest$currentExperien = rest.currentExperience) !== null && _rest$currentExperien !== void 0 ? _rest$currentExperien : 0),\n      currentExperience = _useState2[0],\n      setCurrentExperience = _useState2[1];\n\n  var _useState3 = useState((_rest$challengesCompl = rest.challengesCompleted) !== null && _rest$challengesCompl !== void 0 ? _rest$challengesCompl : 0),\n      challengesCompleted = _useState3[0],\n      setChallengesCompleted = _useState3[1];\n\n  var _useState4 = useState(null),\n      activeChallenge = _useState4[0],\n      setActiveChallenge = _useState4[1];\n\n  var _useState5 = useState(false),\n      isLevelUpModalOpen = _useState5[0],\n      setIsLevelUpModalOpen = _useState5[1];\n\n  var experienceToNextLevel = Math.pow((level + 1) * 4, 2);\n  useEffect(function () {\n    Notification.requestPermission();\n  }, []);\n  useEffect(function () {\n    Cookies.set('level', String(level));\n    Cookies.set('currentExperience', String(currentExperience));\n    Cookies.set('challengesCompleted', String(challengesCompleted));\n  }, [level, currentExperience, challengesCompleted]);\n\n  function levelUp() {\n    setLevel(level + 1);\n  }\n\n  function startNewChallenge() {\n    var randomChallengeIndex = Math.floor(Math.random() * challenges.length);\n    var challenge = challenges[randomChallengeIndex];\n    console.log(Notification.permission);\n    new Audio('/notification.mp3').play();\n\n    if (Notification.permission == 'granted') {\n      new Notification('Novo desafio', {\n        body: \"Valendo \".concat(challenge.amount, \"xp!\")\n      });\n    }\n\n    setActiveChallenge(challenge);\n  }\n\n  function resetChallenge() {\n    setActiveChallenge(null);\n  }\n\n  function completeChallenge() {\n    if (!activeChallenge) {\n      return;\n    }\n\n    var amount = activeChallenge.amount;\n    var finalExperience = currentExperience + amount;\n\n    if (finalExperience >= experienceToNextLevel) {\n      finalExperience = finalExperience - experienceToNextLevel;\n      levelUp();\n    }\n\n    setCurrentExperience(finalExperience);\n    setActiveChallenge(null);\n    setChallengesCompleted(challengesCompleted + 1);\n  }\n\n  return /*#__PURE__*/_jsxDEV(ChallengesContext.Provider, {\n    value: {\n      level: level,\n      currentExperience: currentExperience,\n      challengesCompleted: challengesCompleted,\n      activeChallenge: activeChallenge,\n      experienceToNextLevel: experienceToNextLevel,\n      levelUp: levelUp,\n      startNewChallenge: startNewChallenge,\n      resetChallenge: resetChallenge,\n      completeChallenge: completeChallenge\n    },\n    children: [children, /*#__PURE__*/_jsxDEV(LevelUpModal, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ChallengesProvider, \"UqHVByiPLb7kVaLDO0z8bDhE3KM=\");\n\n_c = ChallengesProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChallengesProvider\");","map":{"version":3,"sources":["C:/Projetos (NÃ£o Apagar)/Pessoal/Rocketseat/moveit-next/src/contexts/ChallengesContext.tsx"],"names":["createContext","useState","useEffect","Cookies","challenges","LevelUpModal","ChallengesContext","ChallengesProvider","children","rest","level","setLevel","currentExperience","setCurrentExperience","challengesCompleted","setChallengesCompleted","activeChallenge","setActiveChallenge","isLevelUpModalOpen","setIsLevelUpModalOpen","experienceToNextLevel","Math","pow","Notification","requestPermission","set","String","levelUp","startNewChallenge","randomChallengeIndex","floor","random","length","challenge","console","log","permission","Audio","play","body","amount","resetChallenge","completeChallenge","finalExperience"],"mappings":"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","sourcesContent":["import { createContext, useState, ReactNode, useEffect } from 'react';\r\nimport Cookies from 'js-cookie';\r\nimport challenges from '../../challenges.json';\r\nimport { LevelUpModal } from '../components/LevelUpModal';\r\n\r\ninterface Challenge {\r\n  type: 'body' | 'eye';\r\n  description: string;\r\n  amount: number;\r\n}\r\n\r\ninterface ChallengesContextData {\r\n  level: number;\r\n  currentExperience: number;\r\n  challengesCompleted: number;\r\n  activeChallenge: Challenge;\r\n  experienceToNextLevel: number;\r\n  levelUp: () => void;\r\n  startNewChallenge: () => void;\r\n  resetChallenge: () => void;\r\n  completeChallenge: () => void;\r\n}\r\n\r\ninterface ChallengesProviderProps {\r\n  children: ReactNode;\r\n  level: number;\r\n  currentExperience: number;\r\n  challengesCompleted: number;\r\n}\r\n\r\nexport const ChallengesContext = createContext({} as ChallengesContextData);\r\n\r\nexport function ChallengesProvider({ children, ...rest } : ChallengesProviderProps) {\r\n\r\n  const [level, setLevel] = useState(rest.level ?? 1);\r\n  const [currentExperience, setCurrentExperience] = useState(rest.currentExperience ?? 0);\r\n  const [challengesCompleted, setChallengesCompleted] = useState(rest.challengesCompleted ?? 0);\r\n  const [activeChallenge, setActiveChallenge] = useState(null);\r\n  const [isLevelUpModalOpen, setIsLevelUpModalOpen] = useState(false);\r\n\r\n  const experienceToNextLevel = Math.pow((level + 1) * 4, 2);\r\n  \r\n  useEffect(() => {\r\n    Notification.requestPermission();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    Cookies.set('level', String(level));\r\n    Cookies.set('currentExperience', String(currentExperience));\r\n    Cookies.set('challengesCompleted', String(challengesCompleted));\r\n  }, [level, currentExperience, challengesCompleted]);\r\n\r\n  function levelUp() {\r\n    setLevel(level + 1);\r\n  }\r\n\r\n  function startNewChallenge() {\r\n    const randomChallengeIndex = Math.floor(Math.random() * challenges.length) ;\r\n    const challenge = challenges[randomChallengeIndex];\r\n\r\n    console.log(Notification.permission);\r\n\r\n    new Audio('/notification.mp3').play();\r\n\r\n    if (Notification.permission == 'granted') {\r\n      new Notification('Novo desafio', {\r\n        body: `Valendo ${challenge.amount}xp!`\r\n      });\r\n    }\r\n\r\n\r\n    setActiveChallenge(challenge);\r\n  }\r\n\r\n  function resetChallenge() {\r\n    setActiveChallenge(null);\r\n  }\r\n  \r\n  function completeChallenge() {\r\n    if (!activeChallenge) {\r\n      return;\r\n    }\r\n\r\n    const { amount } = activeChallenge;\r\n\r\n    let finalExperience = currentExperience + amount;\r\n\r\n    if (finalExperience >= experienceToNextLevel) {\r\n      finalExperience = finalExperience - experienceToNextLevel;\r\n      levelUp();\r\n    }\r\n\r\n    setCurrentExperience(finalExperience);\r\n    setActiveChallenge(null);\r\n    setChallengesCompleted(challengesCompleted + 1);\r\n  }\r\n\r\n  return (\r\n    <ChallengesContext.Provider value={{ \r\n      level, \r\n      currentExperience, \r\n      challengesCompleted, \r\n      activeChallenge,\r\n      experienceToNextLevel,\r\n      levelUp,\r\n      startNewChallenge,\r\n      resetChallenge,\r\n      completeChallenge\r\n    }}>\r\n      {children}\r\n      <LevelUpModal />\r\n    </ChallengesContext.Provider>\r\n  );\r\n}"]},"metadata":{},"sourceType":"module"}